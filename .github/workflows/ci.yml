name: CI
on:
  push:
    branches: ["main"]
    paths-ignore:
      - "docs/**"
      - "README.md"
  pull_request:
    branches: ["main"]
    paths-ignore:
      - "docs/**"
      - "README.md"

env:
  CARGO_TERM_COLOR: always

jobs:
  clippy:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y tree libasound2-dev libglib2.0-dev libxcb-shape0-dev libxcb-xfixes0-dev \
            libcairo-dev libgtk2.0-dev libsoup2.4-dev libgtk-3-dev libwebkit2gtk-4.0-dev xorg-dev ninja-build libxcb-render0-dev
      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace --examples --tests
  clippy-web:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: wasm32-unknown-unknown
      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --target wasm32-unknown-unknown -p ambient_web

  test-linux:
    runs-on: ubuntu-20.04

    steps:
      - name: Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y tree libasound2-dev libglib2.0-dev libxcb-shape0-dev libxcb-xfixes0-dev \
            libcairo-dev libgtk2.0-dev libsoup2.4-dev libgtk-3-dev libwebkit2gtk-4.0-dev xorg-dev ninja-build libxcb-render0-dev
      - name: Install run (headless) dependencies
        run: |
          sudo add-apt-repository ppa:oibaf/graphics-drivers -y
          sudo apt-get update
          sudo apt install -y libxcb-xfixes0-dev mesa-vulkan-drivers

      - uses: Leafwing-Studios/cargo-cache@v1
        with:
          cache-group: "test"
      - uses: taiki-e/install-action@cargo-nextest
      - name: Run tests
        uses: actions-rs/cargo@v1
        env:
          RUSTFLAGS: "-C debuginfo=0"
        with:
          command: nextest
          args: run --workspace

      - name: Run screenshot tests
        run: cargo run -- run guest/rust/examples/basics/primitives --headless --screenshot-test 1
      #   run: node scripts/update_screenshots.js
      # Provides a history of the cache content builds over build to make troubleshooting easier
      - name: Display target directory content
        run: tree --du -h target

  build-doc:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - name: Check that guest/rust's documentation is well-formed
        run: cd guest/rust && RUSTDOCFLAGS="-Dwarnings" cargo doc --workspace --all-features --no-deps

  build:
    strategy:
      matrix:
        include:
          - os: macos-latest
          - os: windows-latest
          - os: ubuntu-20.04

    runs-on: ${{ matrix.os }}
    steps:
      - name: Free up disk space
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Install build dependencies
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y tree libasound2-dev libglib2.0-dev libxcb-shape0-dev libxcb-xfixes0-dev \
            libcairo-dev libgtk2.0-dev libsoup2.4-dev libgtk-3-dev libwebkit2gtk-4.0-dev xorg-dev ninja-build libxcb-render0-dev
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Leafwing-Studios/cargo-cache@v1
        with:
          cache-group: "main"
      - name: Build
        run: cargo build --workspace
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-C debuginfo=0"
      - name: Build guest/rust
        run: cd guest/rust && cargo build --workspace
